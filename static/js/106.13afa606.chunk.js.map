{"version":3,"file":"static/js/106.13afa606.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/fetchFunctions.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Outlet, NavLink } from 'react-router-dom';\n\nimport { getMovieDetails } from 'utils/fetchFunctions';\n\nconst MovieDetails = () => {\n   const [movieDetails, setMovieDetails] = useState('');\n\n   const { movieId } = useParams();\n\n   const location = useLocation();\n\n   const backRef = useRef(location.state?.from ?? '/movies');\n   console.log('ref', backRef);\n\n   const imagePath = 'https://image.tmdb.org/t/p/w500/';\n\n   useEffect(() => {\n      getMovieDetails(movieId)\n         .then(response => response.json())\n         .then(data => {\n            setMovieDetails(data);\n         });\n   }, [movieId]);\n\n   const { original_title, poster_path, overview, vote_average, genres, release_date } =\n      movieDetails;\n\n   return (\n      <>\n         <NavLink to={backRef.current}>Go Back</NavLink>\n         <h2>\n            {original_title}({release_date?.slice(0, 4)})\n         </h2>\n         <img src={imagePath + poster_path} alt=\"\" />\n         <p>Overview: {overview}</p>\n         <p>User Score: {vote_average}</p>\n         <p>Genres: {genres?.map(element => element.name).join(', ')}</p>\n         <NavLink to=\"credits\">To Credits</NavLink>\n         <NavLink to=\"reviews\"> To Reviews</NavLink>\n         <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n         </Suspense>\n      </>\n   );\n};\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '8ea73f499a52c9d06a5899ab37ef8d4c';\n\nexport async function getTrendMovies() {\n   const queryData = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n   );\n   return queryData;\n}\n\nexport async function getMovie(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movie}&language=en-US&page=1&include_adult=false`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieDetails(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}?api_key=${API_KEY}&language=en-US`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieCredits(movie) {\n   const creditsInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/credits?api_key=${API_KEY}&language=en-US`\n   );\n   return creditsInfo;\n}\n\nexport async function getMovieReviews(movie) {\n   const reviews = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n   );\n   return reviews;\n}\n"],"names":["useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","backRef","useRef","state","from","console","log","useEffect","getMovieDetails","then","response","json","data","original_title","poster_path","overview","vote_average","genres","release_date","to","current","slice","src","alt","map","element","name","join","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","getTrendMovies","fetch","queryData","getMovie","movie","movieInfo","getMovieCredits","creditsInfo","getMovieReviews","reviews"],"sourceRoot":""}