{"version":3,"file":"static/js/134.0bce34fb.chunk.js","mappings":"sMAmEA,UA9De,WAAO,IAAD,EAClB,GAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAEzCC,GAAWC,EAAAA,EAAAA,MAgCjB,OAlBAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,IAASL,GACLM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACHf,EAAkBe,EAAKC,QACzB,GACN,GAAE,CAACV,KAaD,iCACG,+CACA,kBAAMW,SAbZ,SAAyBC,GACtBA,EAAMC,iBACNd,EAAgB,CAAEC,QAASL,GAM7B,EAKK,WACG,kBAAOmB,KAAK,OAAOC,SAlCF,SAAAH,GAEvB,GADAhB,EAASgB,EAAMI,OAAOC,OACK,KAAvBL,EAAMI,OAAOC,MACd,OAAOlB,EAAgB,CAAC,EAG7B,EA4BwDkB,MAAOtB,KACvD,mBAAQmB,KAAK,SAAb,+BAEH,wBACIrB,EAAeyB,KAAI,SAAAC,GACjB,OACG,0BACI,KACD,uBAAIA,EAAQC,iBAAoB,KAChC,SAAC,KAAD,CAASC,GAAE,kBAAaF,EAAQG,IAAMC,MAAO,CAAEC,KAAMtB,GAArD,SACIiB,EAAQG,OAJNH,EAAQG,GAQtB,QAIZ,C,sBCjED,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBf,EAAQgB,EAAKhB,KAInB,CAHE,MAAOiB,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQV,GAERmB,QAAQT,QAAQV,GAAOX,KAAKuB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMZ,GACbQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQb,EAClE,CACA,SAASa,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C,uJC7BMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,oGACoBC,MAAM,4DAAD,OACkCF,IAF3D,cACEG,EADF,yBAIGA,GAJH,kEAOA,SAAe5C,EAAtB,+CAAO,OAAP,cAAO,WAAwB6C,GAAxB,uFACoBF,MAAM,qDAAD,OAC2BF,EAD3B,kBAC4CI,EAD5C,+CADzB,cACEC,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BF,GAA/B,uFACoBF,MAAM,sCAAD,OACYE,EADZ,oBAC6BJ,EAD7B,oBADzB,cACEK,EADF,yBAIGA,GAJH,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,cAAO,WAA+BH,GAA/B,uFACsBF,MAAM,sCAAD,OACUE,EADV,4BACmCJ,EADnC,oBAD3B,cACEQ,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BL,GAA/B,uFACkBF,MAAM,sCAAD,OACcE,EADd,4BACuCJ,EADvC,2BADvB,cACEU,EADF,yBAIGA,GAJH,kE","sources":["pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/fetchFunctions.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { getMovie } from '../utils/fetchFunctions';\n\nconst Movies = () => {\n   const [searchedMovies, setSearchedMovies] = useState([]);\n   const [query, setQuery] = useState('');\n   const [searchParams, setSearchParams] = useSearchParams();\n   const movieId = searchParams.get('movieId') ?? '';\n\n   const location = useLocation();\n\n   const updateQueryString = event => {\n      setQuery(event.target.value);\n      if (event.target.value === '') {\n         return setSearchParams({});\n      }\n      // setSearchParams({ movieId: event.target.value });\n   };\n\n   // function onChangeHandler(event) {\n   //    setSearchParams({ movieId: event.target.value });\n   // }\n\n   useEffect(() => {\n      getMovie(movieId)\n         .then(response => response.json())\n         .then(data => {\n            setSearchedMovies(data.results);\n         });\n   }, [movieId]);\n\n   function onSubmitHandler(event) {\n      event.preventDefault();\n      setSearchParams({ movieId: query });\n      // getMovie(movieId)\n      //    .then(response => response.json())\n      //    .then(data => {\n      //       setSearchedMovies(data.results);\n      //    });\n   }\n\n   return (\n      <>\n         <h1>This is moviePage</h1>\n         <form onSubmit={onSubmitHandler}>\n            <input type=\"text\" onChange={updateQueryString} value={query} />\n            <button type=\"submit\">Get Movies!!!</button>\n         </form>\n         <ul>\n            {searchedMovies.map(element => {\n               return (\n                  <li key={element.id}>\n                     {' '}\n                     <p>{element.original_title}</p>{' '}\n                     <NavLink to={`/movies/${element.id}`} state={{ from: location }}>\n                        {element.id}\n                     </NavLink>\n                  </li>\n               );\n            })}\n         </ul>\n      </>\n   );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '8ea73f499a52c9d06a5899ab37ef8d4c';\n\nexport async function getTrendMovies() {\n   const queryData = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n   );\n   return queryData;\n}\n\nexport async function getMovie(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movie}&language=en-US&page=1&include_adult=false`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieDetails(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}?api_key=${API_KEY}&language=en-US`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieCredits(movie) {\n   const creditsInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/credits?api_key=${API_KEY}&language=en-US`\n   );\n   return creditsInfo;\n}\n\nexport async function getMovieReviews(movie) {\n   const reviews = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n   );\n   return reviews;\n}\n"],"names":["useState","searchedMovies","setSearchedMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","movieId","get","location","useLocation","useEffect","getMovie","then","response","json","data","results","onSubmit","event","preventDefault","type","onChange","target","value","map","element","original_title","to","id","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","getTrendMovies","fetch","queryData","movie","movieInfo","getMovieDetails","getMovieCredits","creditsInfo","getMovieReviews","reviews"],"sourceRoot":""}