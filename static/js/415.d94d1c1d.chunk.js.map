{"version":3,"file":"static/js/415.d94d1c1d.chunk.js","mappings":"sMAwCA,UAlCa,WACV,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OARAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,MACIC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACHR,EAAYQ,EAAKC,QACnB,GACN,GAAE,KAGA,iCACG,0CACA,wBACIV,EAASW,KAAI,SAAAC,GACX,OACG,2BACG,gBAAKC,IAjBL,mCAiBsBD,EAAQE,cAAeC,IAAKH,EAAQI,SAC1D,uBAAIJ,EAAQI,SACZ,SAAC,KAAD,CAASC,GAAE,kBAAaL,EAAQM,IAAMC,MAAO,CAAEC,KAAMlB,GAArD,SACIU,EAAQM,OAJNN,EAAQM,GAQtB,QAIZ,C,sBCtCD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOxB,KAAKmB,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,uJC7BMC,EAAU,mCAET,SAAetC,IAAtB,4CAAO,OAAP,cAAO,oGACoBuC,MAAM,4DAAD,OACkCD,IAF3D,cACEE,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAAwBC,GAAxB,uFACoBH,MAAM,qDAAD,OAC2BD,EAD3B,kBAC4CI,EAD5C,+CADzB,cACEC,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BF,GAA/B,uFACoBH,MAAM,sCAAD,OACYG,EADZ,oBAC6BJ,EAD7B,oBADzB,cACEK,EADF,yBAIGA,GAJH,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,cAAO,WAA+BH,GAA/B,uFACsBH,MAAM,sCAAD,OACUG,EADV,4BACmCJ,EADnC,oBAD3B,cACEQ,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BL,GAA/B,uFACkBH,MAAM,sCAAD,OACcG,EADd,4BACuCJ,EADvC,2BADvB,cACEU,EADF,yBAIGA,GAJH,kE","sources":["pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/fetchFunctions.js"],"sourcesContent":["// import { element } from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { getTrendMovies } from '../utils/fetchFunctions';\n\nconst Home = () => {\n   const [filmList, setFilmList] = useState([]);\n   const location = useLocation();\n\n   const imagePath = 'https://image.tmdb.org/t/p/w500/';\n\n   useEffect(() => {\n      getTrendMovies()\n         .then(response => response.json())\n         .then(data => {\n            setFilmList(data.results);\n         });\n   }, []);\n\n   return (\n      <>\n         <h1>Trend movies</h1>\n         <ul>\n            {filmList.map(element => {\n               return (\n                  <li key={element.id}>\n                     <img src={imagePath + element.backdrop_path} alt={element.title} />\n                     <p>{element.title}</p>\n                     <NavLink to={`/movies/${element.id}`} state={{ from: location }}>\n                        {element.id}\n                     </NavLink>\n                  </li>\n               );\n            })}\n         </ul>\n      </>\n   );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '8ea73f499a52c9d06a5899ab37ef8d4c';\n\nexport async function getTrendMovies() {\n   const queryData = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n   );\n   return queryData;\n}\n\nexport async function getMovie(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movie}&language=en-US&page=1&include_adult=false`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieDetails(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}?api_key=${API_KEY}&language=en-US`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieCredits(movie) {\n   const creditsInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/credits?api_key=${API_KEY}&language=en-US`\n   );\n   return creditsInfo;\n}\n\nexport async function getMovieReviews(movie) {\n   const reviews = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n   );\n   return reviews;\n}\n"],"names":["useState","filmList","setFilmList","location","useLocation","useEffect","getTrendMovies","then","response","json","data","results","map","element","src","backdrop_path","alt","title","to","id","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","fetch","queryData","getMovie","movie","movieInfo","getMovieDetails","getMovieCredits","creditsInfo","getMovieReviews","reviews"],"sourceRoot":""}