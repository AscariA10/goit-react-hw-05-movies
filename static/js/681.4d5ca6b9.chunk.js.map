{"version":3,"file":"static/js/681.4d5ca6b9.chunk.js","mappings":"8LAiCA,UA5BgB,WAAO,IAAD,EACnB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,IAAgBH,GACZI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACHR,EAAWQ,EACb,GACN,GAAE,CAACP,IACJQ,QAAQC,IAAIX,EAAQY,UAEjB,iCACG,qCACA,kCACIZ,EAAQY,eADZ,aACI,EAAiBC,KAAI,SAAAC,GACnB,OACG,2BACG,uBAAIA,EAAQC,UACZ,uBAAID,EAAQE,YAFNF,EAAQG,GAKtB,QAIZ,C,sBChCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOrB,KAAKgB,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,uJC7BMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,oGACoBC,MAAM,4DAAD,OACkCF,IAF3D,cACEG,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAAwBC,GAAxB,uFACoBH,MAAM,qDAAD,OAC2BF,EAD3B,kBAC4CK,EAD5C,+CADzB,cACEC,EADF,yBAIGA,GAJH,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BF,GAA/B,uFACoBH,MAAM,sCAAD,OACYG,EADZ,oBAC6BL,EAD7B,oBADzB,cACEM,EADF,yBAIGA,GAJH,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,cAAO,WAA+BH,GAA/B,uFACsBH,MAAM,sCAAD,OACUG,EADV,4BACmCL,EADnC,oBAD3B,cACES,EADF,yBAIGA,GAJH,kEAOA,SAAe5C,EAAtB,+CAAO,OAAP,cAAO,WAA+BwC,GAA/B,uFACkBH,MAAM,sCAAD,OACcG,EADd,4BACuCL,EADvC,2BADvB,cACExC,EADF,yBAIGA,GAJH,kE","sources":["components/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/fetchFunctions.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'utils/fetchFunctions';\n\nconst Reviews = () => {\n   const [reviews, setReviews] = useState([]);\n   const { movieId } = useParams();\n\n   useEffect(() => {\n      getMovieReviews(movieId)\n         .then(response => response.json())\n         .then(data => {\n            setReviews(data);\n         });\n   }, [movieId]);\n   console.log(reviews.results);\n   return (\n      <>\n         <h2>Reviews</h2>\n         <ul>\n            {reviews.results?.map(element => {\n               return (\n                  <li key={element.id}>\n                     <p>{element.author}</p>\n                     <p>{element.content}</p>\n                  </li>\n               );\n            })}\n         </ul>\n      </>\n   );\n};\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '8ea73f499a52c9d06a5899ab37ef8d4c';\n\nexport async function getTrendMovies() {\n   const queryData = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n   );\n   return queryData;\n}\n\nexport async function getMovie(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movie}&language=en-US&page=1&include_adult=false`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieDetails(movie) {\n   const movieInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}?api_key=${API_KEY}&language=en-US`\n   );\n   return movieInfo;\n}\n\nexport async function getMovieCredits(movie) {\n   const creditsInfo = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/credits?api_key=${API_KEY}&language=en-US`\n   );\n   return creditsInfo;\n}\n\nexport async function getMovieReviews(movie) {\n   const reviews = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n   );\n   return reviews;\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","response","json","data","console","log","results","map","element","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","getTrendMovies","fetch","queryData","getMovie","movie","movieInfo","getMovieDetails","getMovieCredits","creditsInfo"],"sourceRoot":""}